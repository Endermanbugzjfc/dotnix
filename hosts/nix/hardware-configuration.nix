# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # root and nix store:
  boot.initrd.luks.devices."luks-5de558fd-2f7c-4c6b-8ec1-400897cdb0e5".device = "/dev/disk/by-uuid/5de558fd-2f7c-4c6b-8ec1-400897cdb0e5";
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0cabbb22-9054-4d56-8bbe-93497858d879";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/BEF0-53D9";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  # swap:
  boot.initrd.luks.devices."luks-e66afa16-555b-445d-a498-9b58f1b3c04e".device = "/dev/disk/by-uuid/e66afa16-555b-445d-a498-9b58f1b3c04e";
  swapDevices =
    [
      {
        device = "/dev/disk/by-uuid/6afe82f3-8b75-4600-bd1a-df51fd7898cf";
        # randomEncryption.enable = true;
        options = [
          "size=16G"
        ];
      }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp43s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp42s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
